‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾
WHAT IS THIS S**T?
________________________________________________________________________________

This is just a rough backlog for listing requirements, breaking them down into
concrete tasks, and trying to keep track of progress ... And also, based on user
experience, jotting down improvement ideas, most of which probably will never be
implemented ...



‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾
REQUIREMENTS
________________________________________________________________________________

  [X] [171201] setting up deployment pipeline (GitHub > Travis > Heroku)
  [X] [171208] setting up production profile and PostgreSQL in Heroku
  [ ] [      ] simple authentication for admin side
  [X] [171201] adding news articles
  [X] [171202] editing news articles
  [X] [171204] adding authors
  [X] [171204] adding topics
  [X] [171204] assigning authors and topics to news articles
  [X] [171202] listing five latest news articles on landing page
  [X] [171205] viewing individual news article
  [X] [171205] tracking clicks per article
  [ ] [      ] navigation bar incl. topics
  [ ] [      ] ...
  [ ] [      ] ...



‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾
IMPROVEMENT IDEAS
________________________________________________________________________________

  [ ] [      ] Ability to search for news articles by keyword(s)
  [ ] [      ] ...
  [ ] [      ] ...
  [ ] [      ] ...



‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾
STORIES / TASKS BREAKDOWN
________________________________________________________________________________

[001] "As admin, I can add news articles, so that ..."

  [X] create "article.html" with form for posting Articles and Pictures
  [X] create entities and repositories for "Article", "Picture"
  [X] "ArticleController" handles GET and POST requests to "/articles"
  [X] "ArticleService" validates and saves Articles
  [X] "ArticleService" assigns Pictures to Articles
  [X] "PictureService" converts and saves inbound Pictures
  [ ] ...

‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾
[002] "As reader, I can immediately see what's latest news on the landing page,
      so that ..."

  [X] create "news.html" listing Articles (show headline, lead, and picture)
  [X] "NewsController" handles GET requests to "/news"
  [X] "ArticleController" handles GET requests to "/articles/{id}/picture" (for
      viewing Pictures)
  [X] "NewsController" fetches only 5 latest Articles in descending order
  [ ] ...

‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾
[003] "As admin, I can edit news articles, so that ..."

  [X] extend "article.html" with prefilled form for editing and posting an
      existing Article
  [X] "ArticleController" handles GET and POST requests to "/articles/{id}"
  [X] "ArticleService" updates existing Articles (incl. Picture replacement)
  [X] show placeholder image for Articles without assigned Picture
  [ ] ...

‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾
[004] "As admin, I can manage authors and their ownership of articles, so that
      ..."

  [X] create "admin.html" listing all Articles and Authors, with links to their
      respective subpages, and with form for adding Authors
  [X] create "author.html" listing Articles assigned to selected Author, and
      form for assigning/removing Articles to/from that Author
  [X] create entity and repository for "Author"
  [X] update "Article" entity with bidirectional ManyToMany mapping to "Author"
  [X] "IndexController" handles GET requests to "/admin"
  [X] "AuthorController" handles various GET, POST and DELETE requests to
      "/authors" and its subaddresses
  [X] "AuthorService" validates, saves, and updates Authors
  [X] "AuthorService" assigns/decouples Articles to/from Authors
  [X] "ArticleRepository" knows custom query "findUnassignedToAuthor"
  [ ] ( should deleting Authors be allowed? )
  [ ] ...

‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾
[005] "As admin, I can define topics and use them for categorizing articles, so
      that ..."

  [X] extend "admin.html" with list of and form for creating Topics
  [X] create "topic.html" listing Articles associated with selected Topic, and
      form for assigning/removing Articles to/from that Topic
  [X] create entity and repository for "Topic"
  [X] update "Article" entity with bidirectional ManyToMany mapping to "Topic"
  [X] "TopicController" handles various GET, POST and DELETE requests to
      "/topics" and its subaddresses
  [X] "TopicService" validates, saves, and updates Authors
  [X] "TopicService" assigns/decouples Articles to/from Authors
  [X] "ArticleRepository" knows custom query "findUnassignedToTopic"
  [ ] ( should deleting Topics be allowed? )
  [ ] ...

‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾
[006] "As reader, I can click on an article of interest to see the full content,
      so that ..."

  [X] create "article_view.html" showing an individual Article's contents
  [X] "NewsController" handles GET requests to "/news/{id}"
  [X] clicking on any Article's headline opens that Article in detail
  [ ] ...

‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾
[007] "As admin, I can see how many clicks each Article gets, so that ..."

  [X] create entity and repository for "Click"
  [X] update "Article" entity with bidirectional OneToMany mapping to "Click"
  [X] "ClickService" identifies and saves Clicks by session and time
  [X] "NewsController" calls "ClickService" on GET requests to "/news/{id}"
  [X] Articles can count their clicks, and Authors/Topics can count the
      aggregate clicks of their associated Articles
  [ ] ...

‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾
[008] Admin authentication

  [X] "DefaultSecurityConfiguration" permits all requests for all users, and
      enables use of H2 console
  [X] "ProductionSecurityConfiguration" limits /admin* only to ADMIN authority,
      permits /news* and /pictures* for all, and and handles login/logout in a
      smart way for all users
  [ ] "application-production.properties" defines "admin" user with heroku
      config variable ${TR00NEWS_PASSWORD} as password
  [ ] ...

‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾
[009] "As ..., I can ..., so that ..."

  [ ] ...
  [ ] ...
  [ ] ...



################################################################################
